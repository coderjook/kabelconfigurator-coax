{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jook\\\\reactprojects\\\\kabelconf2\\\\kabelconf2\\\\src\\\\Components\\\\CoaxAssemblie\\\\Cable\\\\CableDialog.js\";\nimport React from \"react\";\nimport { Dialog, DialogContent, DialogFooter, DialogShadow, DialogBanner, DialogBannerName, ConfirmButton } from \"../../../Styles/DialogStyle\"; // import { formatPrice } from \"../Data/FoodData\";\n\nimport { CableLengthInput } from \"./CableLengthInput\";\nimport { useLength } from \"../../../Hooks/useLength\"; // export function getPrice(order) {\n//   return order.length * order.inkoopprijs;\n// }\n\nfunction CableDialogContainer({\n  openCableDialog,\n  setOpenCableDialog,\n  closeShowCableGrid,\n  selectedCable // setOrders,\n  // orders,\n\n}) {\n  const Cablelength = useLength(openCableDialog && openCableDialog.Cablelength); // const isEditing = openCableDialog.index > -1;\n\n  function close() {\n    setOpenCableDialog();\n  }\n\n  const order = { ...openCableDialog,\n    // quantity: null,\n    Cablelength: Cablelength.value // toppings: null,\n    // choice: null,\n\n  }; // function editOrder() {\n  //   const newOrders = [...orders];\n  //   newOrders[openCableDialog.index] = order;\n  //   setOrders(newOrders);\n  //   close();\n  // }\n\n  function addToOrder() {\n    // setOrders([...orders, order]);\n    close();\n    selectedCable(openCableDialog.typenummer);\n    closeShowCableGrid();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogShadow, {\n    onClick: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogBanner, {\n    img: openCableDialog.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogBannerName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \" \", openCableDialog.typenummer, \" \"), /*#__PURE__*/React.createElement(DialogBannerName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \" \", openCableDialog.kabelgroep, \" \")), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"hier kom lengte\", /*#__PURE__*/React.createElement(CableLengthInput, {\n    Cablelength: Cablelength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmButton, {\n    onClick: addToOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"selecteer de kabel\"))));\n}\n\nexport function CableDialog(props) {\n  if (!props.openCableDialog) return null;\n  return /*#__PURE__*/React.createElement(CableDialogContainer, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Jook/reactprojects/kabelconf2/kabelconf2/src/Components/CoaxAssemblie/Cable/CableDialog.js"],"names":["React","Dialog","DialogContent","DialogFooter","DialogShadow","DialogBanner","DialogBannerName","ConfirmButton","CableLengthInput","useLength","CableDialogContainer","openCableDialog","setOpenCableDialog","closeShowCableGrid","selectedCable","Cablelength","close","order","value","addToOrder","typenummer","img","kabelgroep","CableDialog","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,YALF,EAMEC,gBANF,EAOEC,aAPF,QAQO,6BARP,C,CASA;;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,SAAT,QAA0B,0BAA1B,C,CAEA;AACA;AACA;;AAEA,SAASC,oBAAT,CAA8B;AAC5BC,EAAAA,eAD4B;AAE5BC,EAAAA,kBAF4B;AAG5BC,EAAAA,kBAH4B;AAI5BC,EAAAA,aAJ4B,CAM5B;AACA;;AAP4B,CAA9B,EAQG;AACD,QAAMC,WAAW,GAAGN,SAAS,CAACE,eAAe,IAAIA,eAAe,CAACI,WAApC,CAA7B,CADC,CAGD;;AAEA,WAASC,KAAT,GAAiB;AACfJ,IAAAA,kBAAkB;AACnB;;AAED,QAAMK,KAAK,GAAG,EACZ,GAAGN,eADS;AAEZ;AACAI,IAAAA,WAAW,EAAEA,WAAW,CAACG,KAHb,CAIZ;AACA;;AALY,GAAd,CATC,CAiBD;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASC,UAAT,GAAsB;AACpB;AACAH,IAAAA,KAAK;AACLF,IAAAA,aAAa,CAACH,eAAe,CAACS,UAAjB,CAAb;AACAP,IAAAA,kBAAkB;AACnB;;AAED,sBACE,uDACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEG,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEL,eAAe,CAACU,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBV,eAAe,CAACS,UAApC,MADF,eAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBT,eAAe,CAACW,UAApC,MAFF,CADF,eAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEE,oBAAC,gBAAD;AAAkB,IAAA,WAAW,EAAEP,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eASE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEI,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,CATF,CAFF,CADF;AAsBD;;AAED,OAAO,SAASI,WAAT,CAAqBC,KAArB,EAA4B;AACjC,MAAI,CAACA,KAAK,CAACb,eAAX,EAA4B,OAAO,IAAP;AAC5B,sBAAO,oBAAC,oBAAD,oBAA0Ba,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogFooter,\r\n  DialogShadow,\r\n  DialogBanner,\r\n  DialogBannerName,\r\n  ConfirmButton,\r\n} from \"../../../Styles/DialogStyle\";\r\n// import { formatPrice } from \"../Data/FoodData\";\r\nimport { CableLengthInput } from \"./CableLengthInput\";\r\nimport { useLength } from \"../../../Hooks/useLength\";\r\n\r\n// export function getPrice(order) {\r\n//   return order.length * order.inkoopprijs;\r\n// }\r\n\r\nfunction CableDialogContainer({\r\n  openCableDialog,\r\n  setOpenCableDialog,\r\n  closeShowCableGrid,\r\n  selectedCable,\r\n\r\n  // setOrders,\r\n  // orders,\r\n}) {\r\n  const Cablelength = useLength(openCableDialog && openCableDialog.Cablelength);\r\n\r\n  // const isEditing = openCableDialog.index > -1;\r\n\r\n  function close() {\r\n    setOpenCableDialog();\r\n  }\r\n\r\n  const order = {\r\n    ...openCableDialog,\r\n    // quantity: null,\r\n    Cablelength: Cablelength.value,\r\n    // toppings: null,\r\n    // choice: null,\r\n  };\r\n\r\n  // function editOrder() {\r\n  //   const newOrders = [...orders];\r\n  //   newOrders[openCableDialog.index] = order;\r\n  //   setOrders(newOrders);\r\n  //   close();\r\n  // }\r\n\r\n  function addToOrder() {\r\n    // setOrders([...orders, order]);\r\n    close();\r\n    selectedCable(openCableDialog.typenummer);\r\n    closeShowCableGrid();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DialogShadow onClick={close} />\r\n      <Dialog>\r\n        <DialogBanner img={openCableDialog.img}>\r\n          <DialogBannerName> {openCableDialog.typenummer} </DialogBannerName>\r\n          <DialogBannerName> {openCableDialog.kabelgroep} </DialogBannerName>\r\n        </DialogBanner>\r\n        <DialogContent>\r\n          hier kom lengte\r\n          <CableLengthInput Cablelength={Cablelength} />\r\n        </DialogContent>\r\n        <DialogFooter>\r\n          {/* <ConfirmButton onClick={isEditing ? editOrder : addToOrder}>\r\n            {isEditing ? \"wijzig kabel\" : \"selecteer de kabel\"}{\" \"}\r\n            {formatPrice(getPrice(order))}\r\n          </ConfirmButton> */}\r\n          <ConfirmButton onClick={addToOrder}>selecteer de kabel</ConfirmButton>\r\n        </DialogFooter>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function CableDialog(props) {\r\n  if (!props.openCableDialog) return null;\r\n  return <CableDialogContainer {...props} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}